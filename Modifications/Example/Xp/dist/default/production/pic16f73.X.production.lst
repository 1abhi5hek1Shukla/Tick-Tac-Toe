

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed May 13 15:29:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F73
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F73 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  0007                     _PORTC	set	7
   103  0087                     _TRISC	set	135
   104                           
   105                           	psect	cinit
   106  07FD                     start_initialization:	
   107                           ; #config settings
   108                           
   109  07FD                     __initialization:
   110  07FD                     end_of_initialization:	
   111                           ;End of C runtime variable initialization code
   112                           
   113  07FD                     __end_of__initialization:
   114  07FD  0183               	clrf	3
   115  07FE  118A  2ED5         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	cstackCOMMON
   118  0000                     __pcstackCOMMON:
   119  0000                     ??_init_port:
   120  0000                     ??_custom_delay:	
   121                           ; 1 bytes @ 0x0
   122                           
   123  0000                     ??_main:	
   124                           ; 1 bytes @ 0x0
   125                           
   126  0000                     ??___wmul:	
   127                           ; 1 bytes @ 0x0
   128                           
   129  0000                     ??___awdiv:	
   130                           ; 1 bytes @ 0x0
   131                           
   132  0000                     ??___awmod:	
   133                           ; 1 bytes @ 0x0
   134                           
   135                           
   136                           	psect	cstackBANK0
   137  0020                     __pcstackBANK0:	
   138                           ; 1 bytes @ 0x0
   139                           
   140  0020                     ?_init_port:
   141  0020                     ?_send_number:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0020                     ?_main:	
   145                           ; 1 bytes @ 0x0
   146                           
   147  0020                     ?___wmul:	
   148                           ; 1 bytes @ 0x0
   149                           
   150  0020                     ?___awdiv:	
   151                           ; 2 bytes @ 0x0
   152                           
   153  0020                     ?___awmod:	
   154                           ; 2 bytes @ 0x0
   155                           
   156  0020                     ___wmul@multiplier:	
   157                           ; 2 bytes @ 0x0
   158                           
   159  0020                     ___awdiv@divisor:	
   160                           ; 2 bytes @ 0x0
   161                           
   162  0020                     ___awmod@divisor:	
   163                           ; 2 bytes @ 0x0
   164                           
   165                           
   166                           ; 2 bytes @ 0x0
   167  0020                     	ds	2
   168  0022                     ___wmul@multiplicand:
   169  0022                     ___awdiv@dividend:	
   170                           ; 2 bytes @ 0x2
   171                           
   172  0022                     ___awmod@dividend:	
   173                           ; 2 bytes @ 0x2
   174                           
   175                           
   176                           ; 2 bytes @ 0x2
   177  0022                     	ds	2
   178  0024                     ___awdiv@counter:
   179  0024                     ___awmod@counter:	
   180                           ; 1 bytes @ 0x4
   181                           
   182  0024                     ___wmul@product:	
   183                           ; 1 bytes @ 0x4
   184                           
   185                           
   186                           ; 2 bytes @ 0x4
   187  0024                     	ds	1
   188  0025                     ___awdiv@sign:
   189  0025                     ___awmod@sign:	
   190                           ; 1 bytes @ 0x5
   191                           
   192                           
   193                           ; 1 bytes @ 0x5
   194  0025                     	ds	1
   195  0026                     ?_custom_delay:
   196  0026                     custom_delay@range:	
   197                           ; 1 bytes @ 0x6
   198                           
   199  0026                     ___awdiv@quotient:	
   200                           ; 2 bytes @ 0x6
   201                           
   202                           
   203                           ; 2 bytes @ 0x6
   204  0026                     	ds	2
   205  0028                     ??_send_number:
   206  0028                     custom_delay@count:	
   207                           ; 1 bytes @ 0x8
   208                           
   209                           
   210                           ; 2 bytes @ 0x8
   211  0028                     	ds	2
   212  002A                     send_number@unit:
   213                           
   214                           ; 1 bytes @ 0xA
   215  002A                     	ds	1
   216  002B                     send_number@tenth:
   217                           
   218                           ; 1 bytes @ 0xB
   219  002B                     	ds	1
   220  002C                     send_number@number:
   221                           
   222                           ; 1 bytes @ 0xC
   223  002C                     	ds	1
   224  002D                     main@z:
   225                           
   226                           ; 2 bytes @ 0xD
   227  002D                     	ds	2
   228                           
   229                           	psect	maintext
   230  06D5                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 5 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  z               2   13[BANK0 ] unsigned int 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1
   250 ;;      Params:         0       0       0
   251 ;;      Locals:         0       2       0
   252 ;;      Temps:          0       0       0
   253 ;;      Totals:         0       2       0
   254 ;;Total ram usage:        2 bytes
   255 ;; Hardware stack levels required when called:    2
   256 ;; This function calls:
   257 ;;		_custom_delay
   258 ;;		_init_port
   259 ;;		_send_number
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           
   266                           ;psect for function _main
   267  06D5                     _main:
   268  06D5                     l770:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   271                           
   272                           
   273                           ;main.c: 6:     init_port();
   274  06D5  118A  2687  118A   	fcall	_init_port
   275  06D8                     l772:
   276                           
   277                           ;main.c: 7:     unsigned int z = 0;
   278  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   279  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   280  06DA  01AD               	clrf	main@z
   281  06DB  01AE               	clrf	main@z+1
   282  06DC                     l774:
   283                           
   284                           ;main.c: 9:         custom_delay(5);
   285  06DC  3005               	movlw	5
   286  06DD  00A6               	movwf	custom_delay@range
   287  06DE  3000               	movlw	0
   288  06DF  00A7               	movwf	custom_delay@range+1
   289  06E0  118A  268B  118A   	fcall	_custom_delay
   290  06E3                     l776:
   291                           
   292                           ;main.c: 10:         send_number(z);
   293  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   294  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   295  06E5  082D               	movf	main@z,w
   296  06E6  118A  26FD  118A   	fcall	_send_number
   297  06E9                     l778:
   298                           
   299                           ;main.c: 11:         z++;
   300  06E9  3001               	movlw	1
   301  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   302  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   303  06EC  07AD               	addwf	main@z,f
   304  06ED  1803               	skipnc
   305  06EE  0AAE               	incf	main@z+1,f
   306  06EF  3000               	movlw	0
   307  06F0  07AE               	addwf	main@z+1,f
   308  06F1                     l780:
   309                           
   310                           ;main.c: 12:     }while(z < 100);
   311  06F1  3000               	movlw	0
   312  06F2  022E               	subwf	main@z+1,w
   313  06F3  3064               	movlw	100
   314  06F4  1903               	skipnz
   315  06F5  022D               	subwf	main@z,w
   316  06F6  1C03               	skipc
   317  06F7  2EF9               	goto	u521
   318  06F8  2EFA               	goto	u520
   319  06F9                     u521:
   320  06F9  2EDC               	goto	l774
   321  06FA                     u520:
   322  06FA                     l17:	
   323                           ;main.c: 13:     while(1);
   324                           
   325  06FA  2EFA               	goto	l17
   326  06FB  118A  2800         	ljmp	start
   327  06FD                     __end_of_main:
   328                           
   329                           	psect	text1
   330  06FD                     __ptext1:	
   331 ;; *************** function _send_number *****************
   332 ;; Defined at:
   333 ;;		line 18 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;  number          1    wreg     unsigned char 
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  number          1   12[BANK0 ] unsigned char 
   338 ;;  tenth           1   11[BANK0 ] unsigned char 
   339 ;;  unit            1   10[BANK0 ] unsigned char 
   340 ;; Return value:  Size  Location     Type
   341 ;;                  1    wreg      void 
   342 ;; Registers used:
   343 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   344 ;; Tracked objects:
   345 ;;		On entry : 0/0
   346 ;;		On exit  : 0/0
   347 ;;		Unchanged: 0/0
   348 ;; Data sizes:     COMMON   BANK0   BANK1
   349 ;;      Params:         0       0       0
   350 ;;      Locals:         0       3       0
   351 ;;      Temps:          0       2       0
   352 ;;      Totals:         0       5       0
   353 ;;Total ram usage:        5 bytes
   354 ;; Hardware stack levels used:    1
   355 ;; Hardware stack levels required when called:    1
   356 ;; This function calls:
   357 ;;		___awdiv
   358 ;;		___awmod
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _send_number
   366  06FD                     _send_number:
   367                           
   368                           ;incstack = 0
   369                           ; Regs used in _send_number: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   370                           ;send_number@number stored from wreg
   371  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   372  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   373  06FF  00AC               	movwf	send_number@number
   374  0700                     l766:
   375                           
   376                           ;main.c: 19:     unsigned char unit,tenth;;main.c: 21:     unit = number % 10;
   377  0700  300A               	movlw	10
   378  0701  00A0               	movwf	___awmod@divisor
   379  0702  3000               	movlw	0
   380  0703  00A1               	movwf	___awmod@divisor+1
   381  0704  082C               	movf	send_number@number,w
   382  0705  00A8               	movwf	??_send_number
   383  0706  01A9               	clrf	??_send_number+1
   384  0707  0828               	movf	??_send_number,w
   385  0708  00A2               	movwf	___awmod@dividend
   386  0709  0829               	movf	??_send_number+1,w
   387  070A  00A3               	movwf	___awmod@dividend+1
   388  070B  118A  2739  118A   	fcall	___awmod
   389  070E  1283               	bcf	3,5	;RP0=0, select bank0
   390  070F  1303               	bcf	3,6	;RP1=0, select bank0
   391  0710  0820               	movf	?___awmod,w
   392  0711  00FF               	movwf	btemp+1
   393  0712  087F               	movf	btemp+1,w
   394  0713  00AA               	movwf	send_number@unit
   395                           
   396                           ;main.c: 22:     tenth = number /10;
   397  0714  300A               	movlw	10
   398  0715  00A0               	movwf	___awdiv@divisor
   399  0716  3000               	movlw	0
   400  0717  00A1               	movwf	___awdiv@divisor+1
   401  0718  082C               	movf	send_number@number,w
   402  0719  00A8               	movwf	??_send_number
   403  071A  01A9               	clrf	??_send_number+1
   404  071B  0828               	movf	??_send_number,w
   405  071C  00A2               	movwf	___awdiv@dividend
   406  071D  0829               	movf	??_send_number+1,w
   407  071E  00A3               	movwf	___awdiv@dividend+1
   408  071F  118A  2794  118A   	fcall	___awdiv
   409  0722  1283               	bcf	3,5	;RP0=0, select bank0
   410  0723  1303               	bcf	3,6	;RP1=0, select bank0
   411  0724  0820               	movf	?___awdiv,w
   412  0725  00FF               	movwf	btemp+1
   413  0726  087F               	movf	btemp+1,w
   414  0727  00AB               	movwf	send_number@tenth
   415  0728                     l768:
   416                           
   417                           ;main.c: 23:     PORTC = (0xF0 & (tenth << 4)) | (0x0F & unit);
   418  0728  300F               	movlw	15
   419  0729  052A               	andwf	send_number@unit,w
   420  072A  00A8               	movwf	??_send_number
   421  072B  082B               	movf	send_number@tenth,w
   422  072C  00A9               	movwf	??_send_number+1
   423  072D  3003               	movlw	3
   424  072E                     u515:
   425  072E  1003               	clrc
   426  072F  0DA9               	rlf	??_send_number+1,f
   427  0730  3EFF               	addlw	-1
   428  0731  1D03               	skipz
   429  0732  2F2E               	goto	u515
   430  0733  1003               	clrc
   431  0734  0D29               	rlf	??_send_number+1,w
   432  0735  39F0               	andlw	240
   433  0736  0428               	iorwf	??_send_number,w
   434  0737  0087               	movwf	7	;volatile
   435  0738                     l26:
   436  0738  0008               	return
   437  0739                     __end_of_send_number:
   438                           
   439                           	psect	text2
   440  0739                     __ptext2:	
   441 ;; *************** function ___awmod *****************
   442 ;; Defined at:
   443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;  divisor         2    0[BANK0 ] int 
   446 ;;  dividend        2    2[BANK0 ] int 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  sign            1    5[BANK0 ] unsigned char 
   449 ;;  counter         1    4[BANK0 ] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  2    0[BANK0 ] int 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, btemp+1
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1
   459 ;;      Params:         0       4       0
   460 ;;      Locals:         0       2       0
   461 ;;      Temps:          0       0       0
   462 ;;      Totals:         0       6       0
   463 ;;Total ram usage:        6 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_send_number
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function ___awmod
   474  0739                     ___awmod:
   475  0739                     l720:	
   476                           ;incstack = 0
   477                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   478                           
   479  0739  1283               	bcf	3,5	;RP0=0, select bank0
   480  073A  1303               	bcf	3,6	;RP1=0, select bank0
   481  073B  01A5               	clrf	___awmod@sign
   482  073C                     l722:
   483  073C  1FA3               	btfss	___awmod@dividend+1,7
   484  073D  2F3F               	goto	u411
   485  073E  2F40               	goto	u410
   486  073F                     u411:
   487  073F  2F47               	goto	l728
   488  0740                     u410:
   489  0740                     l724:
   490  0740  09A2               	comf	___awmod@dividend,f
   491  0741  09A3               	comf	___awmod@dividend+1,f
   492  0742  0AA2               	incf	___awmod@dividend,f
   493  0743  1903               	skipnz
   494  0744  0AA3               	incf	___awmod@dividend+1,f
   495  0745                     l726:
   496  0745  01A5               	clrf	___awmod@sign
   497  0746  0AA5               	incf	___awmod@sign,f
   498  0747                     l728:
   499  0747  1FA1               	btfss	___awmod@divisor+1,7
   500  0748  2F4A               	goto	u421
   501  0749  2F4B               	goto	u420
   502  074A                     u421:
   503  074A  2F50               	goto	l732
   504  074B                     u420:
   505  074B                     l730:
   506  074B  09A0               	comf	___awmod@divisor,f
   507  074C  09A1               	comf	___awmod@divisor+1,f
   508  074D  0AA0               	incf	___awmod@divisor,f
   509  074E  1903               	skipnz
   510  074F  0AA1               	incf	___awmod@divisor+1,f
   511  0750                     l732:
   512  0750  0820               	movf	___awmod@divisor,w
   513  0751  0421               	iorwf	___awmod@divisor+1,w
   514  0752  1903               	btfsc	3,2
   515  0753  2F55               	goto	u431
   516  0754  2F56               	goto	u430
   517  0755                     u431:
   518  0755  2F85               	goto	l750
   519  0756                     u430:
   520  0756                     l734:
   521  0756  01A4               	clrf	___awmod@counter
   522  0757  0AA4               	incf	___awmod@counter,f
   523  0758  2F64               	goto	l740
   524  0759                     l736:
   525  0759  3001               	movlw	1
   526  075A                     u445:
   527  075A  1003               	clrc
   528  075B  0DA0               	rlf	___awmod@divisor,f
   529  075C  0DA1               	rlf	___awmod@divisor+1,f
   530  075D  3EFF               	addlw	-1
   531  075E  1D03               	skipz
   532  075F  2F5A               	goto	u445
   533  0760                     l738:
   534  0760  3001               	movlw	1
   535  0761  00FF               	movwf	btemp+1
   536  0762  087F               	movf	btemp+1,w
   537  0763  07A4               	addwf	___awmod@counter,f
   538  0764                     l740:
   539  0764  1FA1               	btfss	___awmod@divisor+1,7
   540  0765  2F67               	goto	u451
   541  0766  2F68               	goto	u450
   542  0767                     u451:
   543  0767  2F59               	goto	l736
   544  0768                     u450:
   545  0768                     l742:
   546  0768  0821               	movf	___awmod@divisor+1,w
   547  0769  0223               	subwf	___awmod@dividend+1,w
   548  076A  1D03               	skipz
   549  076B  2F6E               	goto	u465
   550  076C  0820               	movf	___awmod@divisor,w
   551  076D  0222               	subwf	___awmod@dividend,w
   552  076E                     u465:
   553  076E  1C03               	skipc
   554  076F  2F71               	goto	u461
   555  0770  2F72               	goto	u460
   556  0771                     u461:
   557  0771  2F78               	goto	l746
   558  0772                     u460:
   559  0772                     l744:
   560  0772  0820               	movf	___awmod@divisor,w
   561  0773  02A2               	subwf	___awmod@dividend,f
   562  0774  0821               	movf	___awmod@divisor+1,w
   563  0775  1C03               	skipc
   564  0776  03A3               	decf	___awmod@dividend+1,f
   565  0777  02A3               	subwf	___awmod@dividend+1,f
   566  0778                     l746:
   567  0778  3001               	movlw	1
   568  0779                     u475:
   569  0779  1003               	clrc
   570  077A  0CA1               	rrf	___awmod@divisor+1,f
   571  077B  0CA0               	rrf	___awmod@divisor,f
   572  077C  3EFF               	addlw	-1
   573  077D  1D03               	skipz
   574  077E  2F79               	goto	u475
   575  077F                     l748:
   576  077F  3001               	movlw	1
   577  0780  02A4               	subwf	___awmod@counter,f
   578  0781  1D03               	btfss	3,2
   579  0782  2F84               	goto	u481
   580  0783  2F85               	goto	u480
   581  0784                     u481:
   582  0784  2F68               	goto	l742
   583  0785                     u480:
   584  0785                     l750:
   585  0785  0825               	movf	___awmod@sign,w
   586  0786  1903               	btfsc	3,2
   587  0787  2F89               	goto	u491
   588  0788  2F8A               	goto	u490
   589  0789                     u491:
   590  0789  2F8F               	goto	l754
   591  078A                     u490:
   592  078A                     l752:
   593  078A  09A2               	comf	___awmod@dividend,f
   594  078B  09A3               	comf	___awmod@dividend+1,f
   595  078C  0AA2               	incf	___awmod@dividend,f
   596  078D  1903               	skipnz
   597  078E  0AA3               	incf	___awmod@dividend+1,f
   598  078F                     l754:
   599  078F  0823               	movf	___awmod@dividend+1,w
   600  0790  00A1               	movwf	?___awmod+1
   601  0791  0822               	movf	___awmod@dividend,w
   602  0792  00A0               	movwf	?___awmod
   603  0793                     l202:
   604  0793  0008               	return
   605  0794                     __end_of___awmod:
   606                           
   607                           	psect	text3
   608  0794                     __ptext3:	
   609 ;; *************** function ___awdiv *****************
   610 ;; Defined at:
   611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  divisor         2    0[BANK0 ] int 
   614 ;;  dividend        2    2[BANK0 ] int 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  quotient        2    6[BANK0 ] int 
   617 ;;  sign            1    5[BANK0 ] unsigned char 
   618 ;;  counter         1    4[BANK0 ] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2    0[BANK0 ] int 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, btemp+1
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1
   628 ;;      Params:         0       4       0
   629 ;;      Locals:         0       4       0
   630 ;;      Temps:          0       0       0
   631 ;;      Totals:         0       8       0
   632 ;;Total ram usage:        8 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_send_number
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function ___awdiv
   643  0794                     ___awdiv:
   644  0794                     l676:	
   645                           ;incstack = 0
   646                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   647                           
   648  0794  1283               	bcf	3,5	;RP0=0, select bank0
   649  0795  1303               	bcf	3,6	;RP1=0, select bank0
   650  0796  01A5               	clrf	___awdiv@sign
   651  0797                     l678:
   652  0797  1FA1               	btfss	___awdiv@divisor+1,7
   653  0798  2F9A               	goto	u311
   654  0799  2F9B               	goto	u310
   655  079A                     u311:
   656  079A  2FA2               	goto	l684
   657  079B                     u310:
   658  079B                     l680:
   659  079B  09A0               	comf	___awdiv@divisor,f
   660  079C  09A1               	comf	___awdiv@divisor+1,f
   661  079D  0AA0               	incf	___awdiv@divisor,f
   662  079E  1903               	skipnz
   663  079F  0AA1               	incf	___awdiv@divisor+1,f
   664  07A0                     l682:
   665  07A0  01A5               	clrf	___awdiv@sign
   666  07A1  0AA5               	incf	___awdiv@sign,f
   667  07A2                     l684:
   668  07A2  1FA3               	btfss	___awdiv@dividend+1,7
   669  07A3  2FA5               	goto	u321
   670  07A4  2FA6               	goto	u320
   671  07A5                     u321:
   672  07A5  2FAF               	goto	l690
   673  07A6                     u320:
   674  07A6                     l686:
   675  07A6  09A2               	comf	___awdiv@dividend,f
   676  07A7  09A3               	comf	___awdiv@dividend+1,f
   677  07A8  0AA2               	incf	___awdiv@dividend,f
   678  07A9  1903               	skipnz
   679  07AA  0AA3               	incf	___awdiv@dividend+1,f
   680  07AB                     l688:
   681  07AB  3001               	movlw	1
   682  07AC  00FF               	movwf	btemp+1
   683  07AD  087F               	movf	btemp+1,w
   684  07AE  06A5               	xorwf	___awdiv@sign,f
   685  07AF                     l690:
   686  07AF  01A6               	clrf	___awdiv@quotient
   687  07B0  01A7               	clrf	___awdiv@quotient+1
   688  07B1                     l692:
   689  07B1  0820               	movf	___awdiv@divisor,w
   690  07B2  0421               	iorwf	___awdiv@divisor+1,w
   691  07B3  1903               	btfsc	3,2
   692  07B4  2FB6               	goto	u331
   693  07B5  2FB7               	goto	u330
   694  07B6                     u331:
   695  07B6  2FEE               	goto	l712
   696  07B7                     u330:
   697  07B7                     l694:
   698  07B7  01A4               	clrf	___awdiv@counter
   699  07B8  0AA4               	incf	___awdiv@counter,f
   700  07B9  2FC5               	goto	l700
   701  07BA                     l696:
   702  07BA  3001               	movlw	1
   703  07BB                     u345:
   704  07BB  1003               	clrc
   705  07BC  0DA0               	rlf	___awdiv@divisor,f
   706  07BD  0DA1               	rlf	___awdiv@divisor+1,f
   707  07BE  3EFF               	addlw	-1
   708  07BF  1D03               	skipz
   709  07C0  2FBB               	goto	u345
   710  07C1                     l698:
   711  07C1  3001               	movlw	1
   712  07C2  00FF               	movwf	btemp+1
   713  07C3  087F               	movf	btemp+1,w
   714  07C4  07A4               	addwf	___awdiv@counter,f
   715  07C5                     l700:
   716  07C5  1FA1               	btfss	___awdiv@divisor+1,7
   717  07C6  2FC8               	goto	u351
   718  07C7  2FC9               	goto	u350
   719  07C8                     u351:
   720  07C8  2FBA               	goto	l696
   721  07C9                     u350:
   722  07C9                     l702:
   723  07C9  3001               	movlw	1
   724  07CA                     u365:
   725  07CA  1003               	clrc
   726  07CB  0DA6               	rlf	___awdiv@quotient,f
   727  07CC  0DA7               	rlf	___awdiv@quotient+1,f
   728  07CD  3EFF               	addlw	-1
   729  07CE  1D03               	skipz
   730  07CF  2FCA               	goto	u365
   731  07D0  0821               	movf	___awdiv@divisor+1,w
   732  07D1  0223               	subwf	___awdiv@dividend+1,w
   733  07D2  1D03               	skipz
   734  07D3  2FD6               	goto	u375
   735  07D4  0820               	movf	___awdiv@divisor,w
   736  07D5  0222               	subwf	___awdiv@dividend,w
   737  07D6                     u375:
   738  07D6  1C03               	skipc
   739  07D7  2FD9               	goto	u371
   740  07D8  2FDA               	goto	u370
   741  07D9                     u371:
   742  07D9  2FE1               	goto	l708
   743  07DA                     u370:
   744  07DA                     l704:
   745  07DA  0820               	movf	___awdiv@divisor,w
   746  07DB  02A2               	subwf	___awdiv@dividend,f
   747  07DC  0821               	movf	___awdiv@divisor+1,w
   748  07DD  1C03               	skipc
   749  07DE  03A3               	decf	___awdiv@dividend+1,f
   750  07DF  02A3               	subwf	___awdiv@dividend+1,f
   751  07E0                     l706:
   752  07E0  1426               	bsf	___awdiv@quotient,0
   753  07E1                     l708:
   754  07E1  3001               	movlw	1
   755  07E2                     u385:
   756  07E2  1003               	clrc
   757  07E3  0CA1               	rrf	___awdiv@divisor+1,f
   758  07E4  0CA0               	rrf	___awdiv@divisor,f
   759  07E5  3EFF               	addlw	-1
   760  07E6  1D03               	skipz
   761  07E7  2FE2               	goto	u385
   762  07E8                     l710:
   763  07E8  3001               	movlw	1
   764  07E9  02A4               	subwf	___awdiv@counter,f
   765  07EA  1D03               	btfss	3,2
   766  07EB  2FED               	goto	u391
   767  07EC  2FEE               	goto	u390
   768  07ED                     u391:
   769  07ED  2FC9               	goto	l702
   770  07EE                     u390:
   771  07EE                     l712:
   772  07EE  0825               	movf	___awdiv@sign,w
   773  07EF  1903               	btfsc	3,2
   774  07F0  2FF2               	goto	u401
   775  07F1  2FF3               	goto	u400
   776  07F2                     u401:
   777  07F2  2FF8               	goto	l716
   778  07F3                     u400:
   779  07F3                     l714:
   780  07F3  09A6               	comf	___awdiv@quotient,f
   781  07F4  09A7               	comf	___awdiv@quotient+1,f
   782  07F5  0AA6               	incf	___awdiv@quotient,f
   783  07F6  1903               	skipnz
   784  07F7  0AA7               	incf	___awdiv@quotient+1,f
   785  07F8                     l716:
   786  07F8  0827               	movf	___awdiv@quotient+1,w
   787  07F9  00A1               	movwf	?___awdiv+1
   788  07FA  0826               	movf	___awdiv@quotient,w
   789  07FB  00A0               	movwf	?___awdiv
   790  07FC                     l189:
   791  07FC  0008               	return
   792  07FD                     __end_of___awdiv:
   793                           
   794                           	psect	text4
   795  0687                     __ptext4:	
   796 ;; *************** function _init_port *****************
   797 ;; Defined at:
   798 ;;		line 15 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		status,2
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1
   812 ;;      Params:         0       0       0
   813 ;;      Locals:         0       0       0
   814 ;;      Temps:          0       0       0
   815 ;;      Totals:         0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _init_port
   827  0687                     _init_port:
   828  0687                     l758:	
   829                           ;incstack = 0
   830                           ; Regs used in _init_port: [status,2]
   831                           
   832                           
   833                           ;main.c: 16:     TRISC = 0;
   834  0687  1683               	bsf	3,5	;RP0=1, select bank1
   835  0688  1303               	bcf	3,6	;RP1=0, select bank1
   836  0689  0187               	clrf	7	;volatile
   837  068A                     l23:
   838  068A  0008               	return
   839  068B                     __end_of_init_port:
   840                           
   841                           	psect	text5
   842  068B                     __ptext5:	
   843 ;; *************** function _custom_delay *****************
   844 ;; Defined at:
   845 ;;		line 25 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  range           2    6[BANK0 ] unsigned int 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  count           2    8[BANK0 ] unsigned int 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1
   859 ;;      Params:         0       2       0
   860 ;;      Locals:         0       2       0
   861 ;;      Temps:          0       0       0
   862 ;;      Totals:         0       4       0
   863 ;;Total ram usage:        4 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    1
   866 ;; This function calls:
   867 ;;		___wmul
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _custom_delay
   875  068B                     _custom_delay:
   876  068B                     l760:	
   877                           ;incstack = 0
   878                           ; Regs used in _custom_delay: [wreg+status,2+status,0+pclath+cstack]
   879                           
   880                           
   881                           ;main.c: 26:     unsigned int count;;main.c: 27:     for(count = 0; count < 100*range ; 
      +                          count++);
   882  068B  1283               	bcf	3,5	;RP0=0, select bank0
   883  068C  1303               	bcf	3,6	;RP1=0, select bank0
   884  068D  01A8               	clrf	custom_delay@count
   885  068E  01A9               	clrf	custom_delay@count+1
   886  068F  2E96               	goto	l764
   887  0690                     l762:
   888  0690  3001               	movlw	1
   889  0691  07A8               	addwf	custom_delay@count,f
   890  0692  1803               	skipnc
   891  0693  0AA9               	incf	custom_delay@count+1,f
   892  0694  3000               	movlw	0
   893  0695  07A9               	addwf	custom_delay@count+1,f
   894  0696                     l764:
   895  0696  0827               	movf	custom_delay@range+1,w
   896  0697  00A1               	movwf	___wmul@multiplier+1
   897  0698  0826               	movf	custom_delay@range,w
   898  0699  00A0               	movwf	___wmul@multiplier
   899  069A  3064               	movlw	100
   900  069B  00A2               	movwf	___wmul@multiplicand
   901  069C  3000               	movlw	0
   902  069D  00A3               	movwf	___wmul@multiplicand+1
   903  069E  118A  26AE  118A   	fcall	___wmul
   904  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   905  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   906  06A3  0821               	movf	?___wmul+1,w
   907  06A4  0229               	subwf	custom_delay@count+1,w
   908  06A5  1D03               	skipz
   909  06A6  2EA9               	goto	u505
   910  06A7  0820               	movf	?___wmul,w
   911  06A8  0228               	subwf	custom_delay@count,w
   912  06A9                     u505:
   913  06A9  1C03               	skipc
   914  06AA  2EAC               	goto	u501
   915  06AB  2EAD               	goto	u500
   916  06AC                     u501:
   917  06AC  2E90               	goto	l762
   918  06AD                     u500:
   919  06AD                     l32:
   920  06AD  0008               	return
   921  06AE                     __end_of_custom_delay:
   922                           
   923                           	psect	text6
   924  06AE                     __ptext6:	
   925 ;; *************** function ___wmul *****************
   926 ;; Defined at:
   927 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  multiplier      2    0[BANK0 ] unsigned int 
   930 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  product         2    4[BANK0 ] unsigned int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2    0[BANK0 ] unsigned int 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1
   942 ;;      Params:         0       4       0
   943 ;;      Locals:         0       2       0
   944 ;;      Temps:          0       0       0
   945 ;;      Totals:         0       6       0
   946 ;;Total ram usage:        6 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_custom_delay
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function ___wmul
   957  06AE                     ___wmul:
   958  06AE                     l662:	
   959                           ;incstack = 0
   960                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   961                           
   962  06AE  1283               	bcf	3,5	;RP0=0, select bank0
   963  06AF  1303               	bcf	3,6	;RP1=0, select bank0
   964  06B0  01A4               	clrf	___wmul@product
   965  06B1  01A5               	clrf	___wmul@product+1
   966  06B2                     l664:
   967  06B2  1C20               	btfss	___wmul@multiplier,0
   968  06B3  2EB5               	goto	u271
   969  06B4  2EB6               	goto	u270
   970  06B5                     u271:
   971  06B5  2EBC               	goto	l36
   972  06B6                     u270:
   973  06B6                     l666:
   974  06B6  0822               	movf	___wmul@multiplicand,w
   975  06B7  07A4               	addwf	___wmul@product,f
   976  06B8  1803               	skipnc
   977  06B9  0AA5               	incf	___wmul@product+1,f
   978  06BA  0823               	movf	___wmul@multiplicand+1,w
   979  06BB  07A5               	addwf	___wmul@product+1,f
   980  06BC                     l36:
   981  06BC  3001               	movlw	1
   982  06BD                     u285:
   983  06BD  1003               	clrc
   984  06BE  0DA2               	rlf	___wmul@multiplicand,f
   985  06BF  0DA3               	rlf	___wmul@multiplicand+1,f
   986  06C0  3EFF               	addlw	-1
   987  06C1  1D03               	skipz
   988  06C2  2EBD               	goto	u285
   989  06C3                     l668:
   990  06C3  3001               	movlw	1
   991  06C4                     u295:
   992  06C4  1003               	clrc
   993  06C5  0CA1               	rrf	___wmul@multiplier+1,f
   994  06C6  0CA0               	rrf	___wmul@multiplier,f
   995  06C7  3EFF               	addlw	-1
   996  06C8  1D03               	skipz
   997  06C9  2EC4               	goto	u295
   998  06CA                     l670:
   999  06CA  0820               	movf	___wmul@multiplier,w
  1000  06CB  0421               	iorwf	___wmul@multiplier+1,w
  1001  06CC  1D03               	btfss	3,2
  1002  06CD  2ECF               	goto	u301
  1003  06CE  2ED0               	goto	u300
  1004  06CF                     u301:
  1005  06CF  2EB2               	goto	l664
  1006  06D0                     u300:
  1007  06D0                     l672:
  1008  06D0  0825               	movf	___wmul@product+1,w
  1009  06D1  00A1               	movwf	?___wmul+1
  1010  06D2  0824               	movf	___wmul@product,w
  1011  06D3  00A0               	movwf	?___wmul
  1012  06D4                     l38:
  1013  06D4  0008               	return
  1014  06D5                     __end_of___wmul:
  1015  007E                     btemp	set	126	;btemp
  1016  007E                     wtemp0	set	126
  1017                           
  1018                           	psect	config
  1019                           
  1020                           ;Config register CONFIG @ 0x2007
  1021                           ;	Oscillator Selection bits
  1022                           ;	FOSC = RC, RC oscillator
  1023                           ;	Watchdog Timer Enable bit
  1024                           ;	WDTE = OFF, WDT disabled
  1025                           ;	Power-up Timer Enable bit
  1026                           ;	PWRTE = OFF, PWRT disabled
  1027                           ;	FLASH Program Memory Code Protection bit
  1028                           ;	CP = OFF, Code protection off
  1029                           ;	Brown-out Reset Enable bit
  1030                           ;	BOREN = ON, BOR enabled
  1031  2007                     	org	8199
  1032  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     15      15
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_number
    _send_number->___awdiv
    _custom_delay->___wmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1402
                                             13 BANK0      2     2      0
                       _custom_delay
                          _init_port
                        _send_number
 ---------------------------------------------------------------------------------
 (1) _send_number                                          5     5      0     990
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _custom_delay                                         4     2      2     366
                                              6 BANK0      4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _custom_delay
     ___wmul
   _init_port
   _send_number
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            5E      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               5E      F       F       5       16.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            5E      0       0       6        0.0%
BANK1               5E      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed May 13 15:29:12 2020

                     l23 068A                       l32 06AD                       l17 06FA  
                     l26 0738                       l36 06BC                       l38 06D4  
           ___awdiv@sign 0025      ___wmul@multiplicand 0022                      l202 0793  
                    l700 07C5                      l189 07FC                      l710 07E8  
                    l702 07C9                      l704 07DA                      l712 07EE  
                    l720 0739                      l714 07F3                      l706 07E0  
                    l730 074B                      l722 073C                      l716 07F8  
                    l708 07E1                      l740 0764                      l732 0750  
                    l724 0740                      l670 06CA                      l662 06AE  
                    l742 0768                      l734 0756                      l750 0785  
                    l726 0745                      l672 06D0                      l664 06B2  
                    l760 068B                      l680 079B                      l752 078A  
                    l744 0772                      l736 0759                      l728 0747  
                    l666 06B6                      l762 0690                      l690 07AF  
                    l682 07A0                      l754 078F                      l746 0778  
                    l738 0760                      l770 06D5                      l668 06C3  
                    l764 0696                      l692 07B1                      l684 07A2  
                    l676 0794                      l748 077F                      l780 06F1  
                    l772 06D8                      l758 0687                      l694 07B7  
                    l686 07A6                      l678 0797                      l766 0700  
                    l774 06DC                      l696 07BA                      l688 07AB  
                    l768 0728                      l776 06E3                      l698 07C1  
                    l778 06E9                      u300 06D0                      u301 06CF  
                    u310 079B                      u311 079A                      u400 07F3  
                    u320 07A6                      u401 07F2                      u321 07A5  
                    u330 07B7                      u410 0740                      u331 07B6  
                    u411 073F                      u500 06AD                      u420 074B  
                    u501 06AC                      u421 074A                      u270 06B6  
                    u350 07C9                      u430 0756                      u271 06B5  
                    u351 07C8                      u431 0755                      u520 06FA  
                    u505 06A9                      u345 07BB                      u521 06F9  
                    u370 07DA                      u450 0768                      u371 07D9  
                    u451 0767                      u515 072E                      u460 0772  
                    u285 06BD                      u365 07CA                      u461 0771  
                    u445 075A                      u390 07EE                      u295 06C4  
                    u391 07ED                      u375 07D6                      u480 0785  
                    u385 07E2                      u481 0784                      u465 076E  
                    u490 078A                      u491 0789                      u475 0779  
      custom_delay@count 0028        custom_delay@range 0026             ___awmod@sign 0025  
                   _main 06D5                     btemp 007E                     start 0000  
      send_number@number 002C                    ?_main 0020          __end_of___awdiv 07FD  
        __end_of___awmod 0794          ___awdiv@divisor 0020          ___awdiv@counter 0024  
                  _PORTC 0007                    _TRISC 0087                    main@z 002D  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_main 06FD                   ??_main 0000         ___awdiv@dividend 0022  
           ?_send_number 0020                   ___wmul 06AE                ??___awdiv 0000  
              ??___awmod 0000            ?_custom_delay 0026         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024  __end_of__initialization 07FD  
        send_number@unit 002A           __pcstackCOMMON 0000           ??_custom_delay 0000  
     __size_of_init_port 0004               __pmaintext 06D5                  ?___wmul 0020  
   __size_of_send_number 003C                  ___awdiv 0794                  ___awmod 0739  
        __size_of___wmul 0027                  __ptext1 06FD                  __ptext2 0739  
                __ptext3 0794                  __ptext4 0687                  __ptext5 068B  
                __ptext6 06AE        __end_of_init_port 068B         ___awmod@dividend 0022  
   end_of_initialization 07FD     __end_of_custom_delay 06AE         send_number@tenth 002B  
         __end_of___wmul 06D5      start_initialization 07FD                 ??___wmul 0000  
              ___latbits 0001            __pcstackBANK0 0020    __size_of_custom_delay 0023  
               ?___awdiv 0020                 ?___awmod 0020             _custom_delay 068B  
              _init_port 0687            ??_send_number 0028           ___wmul@product 0024  
      ___wmul@multiplier 0020               ?_init_port 0020      __end_of_send_number 0739  
       __size_of___awdiv 0069         __size_of___awmod 005B            __size_of_main 0028  
            ??_init_port 0000              _send_number 06FD  
